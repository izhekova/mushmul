# This is a configuration file for Zabbix Proxy process
# To get more information about Zabbix,
# visit http://www.zabbix.com

############ GENERAL PARAMETERS #################

### Option: ProxyMode
#	Proxy operating mode
#	0 - proxy in the active mode
#	1 - proxy in the passive mode
#
# Mandatory: no
# Default:
# ProxyMode=0
ProxyMode=<%= scope.lookupvar('zabbix::proxy::proxy_mode') %>

### Option: Server
#	IP address (or hostname) of Zabbix server.
#	Active proxy will get configuration data from the server.
#	For a proxy in the passive mode this parameter will be ignored.
#
# Mandatory: yes (if ProxyMode is set to 0)
# Default:
# Server=
Server=<%= scope.lookupvar('zabbix::proxy::zabbix_server') %>

### Option: ServerPort
#	Port of Zabbix trapper on Zabbix server.
#	For a proxy in the passive mode this parameter will be ignored.
#
# Mandatory: no
# Range: 1024-32767
# Default:
# ServerPort=10051
#ServerPort=<%= scope.lookupvar('zabbix::proxy::server_port') %>

### Option: Hostname
#	Unique, case sensitive Proxy name. Make sure the Proxy name is known to the server!
#	Value is acquired from HostnameItem if undefined.
#
# Mandatory: no
# Default:
# Hostname=
Hostname=<%= scope.lookupvar('zabbix::proxy::hostname') %>

### Option: HostnameItem
#	Item used for generating Hostname if it is undefined.
#	Ignored if Hostname is defined.
#
# Mandatory: no
# Default:
# HostnameItem=system.hostname
#HostnameItem=<%= scope.lookupvar('zabbix::proxy::hostname_item') %>

### Option: ListenPort
#	Listen port for trapper.
#
# Mandatory: no
# Range: 1024-32767
# Default:
# ListenPort=10051
ListenPort=<%= scope.lookupvar('zabbix::proxy::listen_port') %>

### Option: SourceIP
#	Source IP address for outgoing connections.
#
# Mandatory: no
# Default:
# SourceIP=
<% if @source_ip %>
SourceIP=<%= @source_ip %>
<% end %>

### Option: LogFile
#	Name of log file.
#	If not set, syslog is used.
#
# Mandatory: no
# Default:
# LogFile=
LogFile=<%= scope.lookupvar('zabbix::proxy::log_file') %>

### Option: LogFileSize
#	Maximum size of log file in MB.
#	0 - disable automatic log rotation.
#
# Mandatory: no
# Range: 0-1024
# Default:
# LogFileSize=1
LogFileSize=<%= scope.lookupvar('zabbix::proxy::log_file_size') %>

### Option: DebugLevel
#	Specifies debug level
#	0 - no debug
#	1 - critical information
#	2 - error information
#	3 - warnings
#	4 - for debugging (produces lots of information)
#
# Mandatory: no
# Range: 0-4
# Default:
# DebugLevel=3
DebugLevel=<%= scope.lookupvar('zabbix::proxy::debug_level') %>

### Option: PidFile
#	Name of PID file.
#
# Mandatory: no
# Default:
# PidFile=/tmp/zabbix_proxy.pid
PidFile=<%= scope.lookupvar('zabbix::proxy::pid_file') %>

### Option: DBHost
#	Database host name.
#	If set to localhost, socket is used for MySQL.
#	If set to empty string, socket is used for PostgreSQL.
#
# Mandatory: no
# Default:
# DBHost=localhost
#DBHost=<%= scope.lookupvar('zabbix::proxy::db_host') %>

### Option: DBName
#	Database name.
#	For SQLite3 path to database file must be provided. DBUser and DBPassword are ignored.
#	Warning: do not attempt to use the same database Zabbix server is using.
#
# Mandatory: yes
# Default:
# DBName=
DBName=<%= scope.lookupvar('zabbix::proxy::install::db_name') %>

### Option: DBSchema
#	Schema name. Used for IBM DB2.
#
# Mandatory: no
# Default:
# DBSchema=
#<% if @db_schema %>
#DBSchema=<%= scope.lookupvar('zabbix::proxy::db_schema') %>
#<% end %>

### Option: DBUser
#	Database user. Ignored for SQLite.
#
# Default:
# DBUser=
DBUser=<%= scope.lookupvar('zabbix::proxy::db_user') %>

### Option: DBPassword
#	Database password. Ignored for SQLite.
#	Comment this line if no password is used.
#
# Mandatory: no
# Default:
# DBPassword=
<% if @db_password %>
DBPassword=<%= scope.lookupvar('zabbix::proxy::db_password') %>
<% end %>

### Option: DBSocket
#	Path to MySQL socket.
#
# Mandatory: no
# Default:
# DBSocket=/tmp/mysql.sock
DBSocket=<%= scope.lookupvar('zabbix::proxy::db_socket') %>

# Option: DBPort
#	Database port when not using local socket. Ignored for SQLite.
#
# Mandatory: no
# Default (for MySQL):
# DBPort=3306
#DBPort=<%= scope.lookupvar('zabbix::proxy::db_port') %>

######### PROXY SPECIFIC PARAMETERS #############

### Option: ProxyLocalBuffer
#	Proxy will keep data locally for N hours, even if the data have already been synced with the server.
#	This parameter may be used if local data will be used by third party applications.
#
# Mandatory: no
# Range: 0-720
# Default:
# ProxyLocalBuffer=0
ProxyLocalBuffer=<%= scope.lookupvar('zabbix::proxy::proxy_local_buffer') %>

### Option: ProxyOfflineBuffer
#	Proxy will keep data for N hours in case if no connectivity with Zabbix Server.
#	Older data will be lost.
#
# Mandatory: no
# Range: 1-720
# Default:
# ProxyOfflineBuffer=1
ProxyOfflineBuffer=<%= scope.lookupvar('zabbix::proxy::proxy_offline_buffer') %>

### Option: HeartbeatFrequency
#	Frequency of heartbeat messages in seconds.
#	Used for monitoring availability of Proxy on server side.
#	0 - heartbeat messages disabled.
#	For a proxy in the passive mode this parameter will be ignored.
#
# Mandatory: no
# Range: 0-3600
# Default:
# HeartbeatFrequency=60
#HeartbeatFrequency=<%= scope.lookupvar('zabbix::proxy::heartbeat_frequency') %>

### Option: ConfigFrequency
#	How often proxy retrieves configuration data from Zabbix Server in seconds.
#	For a proxy in the passive mode this parameter will be ignored.
#
# Mandatory: no
# Range: 1-3600*24*7
# Default:
# ConfigFrequency=3600
ConfigFrequency=<%= scope.lookupvar('zabbix::proxy::config_frequency') %>

### Option: DataSenderFrequency
#	Proxy will send collected data to the Server every N seconds.
#	For a proxy in the passive mode this parameter will be ignored.
#
# Mandatory: no
# Range: 1-3600
# Default:
# DataSenderFrequency=1
DataSenderFrequency=<%= scope.lookupvar('zabbix::proxy::data_sender_frequency') %>

############ ADVANCED PARAMETERS ################

### Option: StartPollers
#	Number of pre-forked instances of pollers.
#
# Mandatory: no
# Range: 0-1000
# Default:
# StartPollers=5
StartPollers=<%= scope.lookupvar('zabbix::proxy::start_pollers') %>

### Option: StartIPMIPollers
#	Number of pre-forked instances of IPMI pollers.
#
# Mandatory: no
# Range: 0-1000
# Default:
# StartIPMIPollers=0
StartIPMIPollers=<%= scope.lookupvar('zabbix::proxy::start_ipmi_pollers') %>

### Option: StartPollersUnreachable
#	Number of pre-forked instances of pollers for unreachable hosts (including IPMI).
#
# Mandatory: no
# Range: 0-1000
# Default:
# StartPollersUnreachable=1
StartPollersUnreachable=<%= scope.lookupvar('zabbix::proxy::start_pollers_unreachable') %>

### Option: StartTrappers
#	Number of pre-forked instances of trappers.
#	Trappers accept incoming connections from Zabbix sender and active agents.
#
# Mandatory: no
# Range: 0-1000
# Default:
# StartTrappers=5
StartTrappers=<%= scope.lookupvar('zabbix::proxy::start_trappers') %>

### Option: StartPingers
#	Number of pre-forked instances of ICMP pingers.
#
# Mandatory: no
# Range: 0-1000
# Default:
# StartPingers=1
StartPingers=<%= scope.lookupvar('zabbix::proxy::start_pingers') %>

### Option: StartDiscoverers
#	Number of pre-forked instances of discoverers.
#
# Mandatory: no
# Range: 0-250
# Default:
# StartDiscoverers=1
StartDiscoverers=<%= scope.lookupvar('zabbix::proxy::start_discoverers') %>

### Option: StartHTTPPollers
#	Number of pre-forked instances of HTTP pollers.
#
# Mandatory: no
# Range: 0-1000
# Default:
# StartHTTPPollers=1
StartHTTPPollers=<%= scope.lookupvar('zabbix::proxy::start_http_pollers') %>

### Option: JavaGateway
#	IP address (or hostname) of Zabbix Java gateway.
#	Only required if Java pollers are started.
#
# Mandatory: no
# Default:
# JavaGateway=
JavaGateway=<%= scope.lookupvar('zabbix::proxy::java_gateway') %>

### Option: JavaGatewayPort
#	Port that Zabbix Java gateway listens on.
#
# Mandatory: no
# Range: 1024-32767
# Default:
# JavaGatewayPort=10052
JavaGatewayPort=<%= scope.lookupvar('zabbix::proxy::java_gateway_port') %>

### Option: StartJavaPollers
#	Number of pre-forked instances of Java pollers.
#
# Mandatory: no
# Range: 0-1000
# Default:
# StartJavaPollers=0
StartJavaPollers=<%= scope.lookupvar('zabbix::proxy::start_java_pollers') %>

### Option: StartVMwareCollectors
#	Number of pre-forked vmware collector instances.
#
# Mandatory: no
# Range: 0-250
# Default:
# StartVMwareCollectors=0
StartVMwareCollectors=<%= scope.lookupvar('zabbix::proxy::start_vmware_collectors') %>

### Option: VMwareFrequency
#	How often Zabbix will connect to VMware service to obtain a new data.
#
# Mandatory: no
# Range: 10-86400
# Default:
# VMwareFrequency=60
VMwareFrequency=<%= scope.lookupvar('zabbix::proxy::vmware_frequency') %>

### Option: VMwareCacheSize
#	Size of VMware cache, in bytes.
#	Shared memory size for storing VMware data.
#	Only used if VMware collectors are started.
#
# Mandatory: no
# Range: 256K-2G
# Default:
# VMwareCacheSize=8M
VMwareCacheSize=<%= scope.lookupvar('zabbix::proxy::vmware_cache_size') %>

### Option: SNMPTrapperFile
#	Temporary file used for passing data from SNMP trap daemon to the proxy.
#	Must be the same as in zabbix_trap_receiver.pl or SNMPTT configuration file.
#
# Mandatory: no
# Default:
# SNMPTrapperFile=/tmp/zabbix_traps.tmp
SNMPTrapperFile=<%= scope.lookupvar('zabbix::proxy::snmp_trapper_file') %>

### Option: StartSNMPTrapper
#	If 1, SNMP trapper process is started.
#
# Mandatory: no
# Range: 0-1
# Default:
# StartSNMPTrapper=0
StartSNMPTrapper=<%= scope.lookupvar('zabbix::proxy::start_snmp_trapper') %>

### Option: ListenIP
#	List of comma delimited IP addresses that the trapper should listen on.
#	Trapper will listen on all network interfaces if this parameter is missing.
#
# Mandatory: no
# Default:
# ListenIP=0.0.0.0
ListenIP=<%= scope.lookupvar('zabbix::proxy::listen_ip') %>

### Option: HousekeepingFrequency
#	How often Zabbix will perform housekeeping procedure (in hours).
#	Housekeeping is removing unnecessary information from history, alert, and alarms tables.
#
# Mandatory: no
# Range: 1-24
# Default:
# HousekeepingFrequency=1
HousekeepingFrequency=<%= scope.lookupvar('zabbix::proxy::housekeeping_frequency') %>

### Option: CacheSize
#	Size of configuration cache, in bytes.
#	Shared memory size, for storing hosts and items data.
#
# Mandatory: no
# Range: 128K-2G
# Default:
# CacheSize=8M
CacheSize=<%= scope.lookupvar('zabbix::proxy::cache_size') %>

### Option: StartDBSyncers
#	Number of pre-forked instances of DB Syncers
#
# Mandatory: no
# Range: 1-100
# Default:
# StartDBSyncers=4
StartDBSyncers=<%= scope.lookupvar('zabbix::proxy::start_db_syncers') %>

### Option: HistoryCacheSize
#	Size of history cache, in bytes.
#	Shared memory size for storing history data.
#
# Mandatory: no
# Range: 128K-2G
# Default:
# HistoryCacheSize=8M
HistoryCacheSize=<%= scope.lookupvar('zabbix::proxy::history_cache_size') %>

### Option: HistoryTextCacheSize
#	Size of text history cache, in bytes.
#	Shared memory size for storing character, text or log history data.
#
# Mandatory: no
# Range: 128K-2G
# Default:
# HistoryTextCacheSize=16M
HistoryTextCacheSize=<%= scope.lookupvar('zabbix::proxy::history_text_cache_size') %>

### Option: Timeout
#	Specifies how long we wait for agent, SNMP device or external check (in seconds).
#
# Mandatory: no
# Range: 1-30
# Default:
# Timeout=3
Timeout=<%= scope.lookupvar('zabbix::proxy::timeout') %>

### Option: TrapperTimeout
#	Specifies how many seconds trapper may spend processing new data.
#
# Mandatory: no
# Range: 1-300
# Default:
# TrapperTimeout=300
TrapperTimeout=<%= scope.lookupvar('zabbix::proxy::trapper_timeout') %>

### Option: UnreachablePeriod
#	After how many seconds of unreachability treat a host as unavailable.
#
# Mandatory: no
# Range: 1-3600
# Default:
# UnreachablePeriod=45
UnreachablePeriod=<%= scope.lookupvar('zabbix::proxy::unreachable_period') %>

### Option: UnavailableDelay
#	How often host is checked for availability during the unavailability period, in seconds.
#
# Mandatory: no
# Range: 1-3600
# Default:
# UnavailableDelay=60
UnavailableDelay=<%= scope.lookupvar('zabbix::proxy::unavailable_delay') %>

### Option: UnreachableDelay
#	How often host is checked for availability during the unreachability period, in seconds.
#
# Mandatory: no
# Range: 1-3600
# Default:
# UnreachableDelay=15
UnreachableDelay=<%= scope.lookupvar('zabbix::proxy::unreachable_delay') %>

### Option: ExternalScripts
#	Full path to location of external scripts.
#	Default depends on compilation options.
#
# Mandatory: no
# Default:
# ExternalScripts=${datadir}/zabbix/externalscripts
ExternalScripts=<%= scope.lookupvar('zabbix::proxy::external_scripts') %>

### Option: FpingLocation
#	Location of fping.
#	Make sure that fping binary has root ownership and SUID flag set.
#
# Mandatory: no
# Default:
# FpingLocation=/usr/sbin/fping
FpingLocation=<%= scope.lookupvar('zabbix::proxy::fping_location') %>

### Option: Fping6Location
#	Location of fping6.
#	Make sure that fping6 binary has root ownership and SUID flag set.
#	Make empty if your fping utility is capable to process IPv6 addresses.
#
# Mandatory: no
# Default:
# Fping6Location=/usr/sbin/fping6
Fping6Location=<%= scope.lookupvar('zabbix::proxy::fping6_location') %>

### Option: SSHKeyLocation
#	Location of public and private keys for SSH checks and actions.
#
# Mandatory: no
# Default:
# SSHKeyLocation=
<% if @ssh_key_location %>
SSHKeyLocation=<%= scope.lookupvar('zabbix::proxy::ssh_key_location') %>
<% end %>

### Option: LogSlowQueries
#	How long a database query may take before being logged (in milliseconds).
#	Only works if DebugLevel set to 3 or 4.
#	0 - don't log slow queries.
#
# Mandatory: no
# Range: 1-3600000
# Default:
# LogSlowQueries=0
LogSlowQueries=<%= scope.lookupvar('zabbix::proxy::log_slow_queries') %>

### Option: TmpDir
#	Temporary directory.
#
# Mandatory: no
# Default:
# TmpDir=/tmp
TmpDir=<%= scope.lookupvar('zabbix::proxy::tmp_dir') %>

### Option: AllowRoot
#	Allow the proxy to run as 'root'. If disabled and the proxy is started by 'root', the proxy
#	will try to switch to user 'zabbix' instead. Has no effect if started under a regular user.
#	0 - do not allow
#	1 - allow
#
# Mandatory: no
# Default:
# AllowRoot=0
#AllowRoot=<%= scope.lookupvar('zabbix::proxy::allow_root') %>

### Option: Include
#	You may include individual files or all files in a directory in the configuration file.
#	Installing Zabbix will create include directory in /usr/local/etc, unless modified during the compile time.
#
# Mandatory: no
# Default:
# Include=
# Include=/usr/local/etc/zabbix_proxy.general.conf
# Include=/usr/local/etc/zabbix_proxy.conf.d/
<% if @include %>
Include=<%= scope.lookupvar('zabbix::proxy::include') %>
<% end %>

####### LOADABLE MODULES #######

### Option: LoadModulePath
#	Full path to location of proxy modules.
#	Default depends on compilation options.
#
# Mandatory: no
# Default:
# LoadModulePath=${libdir}/modules
LoadModulePath=<%= scope.lookupvar('zabbix::proxy::load_module_path') %>

### Option: LoadModule
#	Module to load at proxy startup. Modules are used to extend functionality of the proxy.
#	Format: LoadModule=<module.so>
#	The modules must be located in directory specified by LoadModulePath.
#	It is allowed to include multiple LoadModule parameters.
#
# Mandatory: no
# Default:
# LoadModule=
<% if @load_module %>
<% load_module.each do |parameter| %>LoadModule=<%= parameter %>
<% end %>
<% end %>
